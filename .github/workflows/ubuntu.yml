name: CI

on: pull_request

jobs:
  build:
    name: Building on ubuntu 20.04
    runs-on: ubuntu-20.04
    container: jnbrunet/caribou-ubuntu-builder:v20.12
    env:
      SOFA_ROOT: /opt/sofa
      VTK_ROOT: /opt/vtk

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install requirements
        run: |
          apt-get -qq update
          apt-get install -qq software-properties-common
          add-apt-repository -y ppa:deadsnakes
          apt-get update && apt-get upgrade -qq
          apt-get install -qq \
            libpython3.7 python3.7 python3-pip libpython3.7-dev pybind11-dev \
            qtbase5-dev libqt5charts5-dev libqt5opengl5-dev qtwebengine5-dev libopengl0 libeigen3-dev libglew-dev zlib1g-dev \
            libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \
            libmkl-dev libmkl-interface-dev libmkl-threading-dev libmkl-computational-dev \
            g++ cmake ccache ninja-build curl unzip git
          python3.7 -m pip install numpy

      - name: Download SOFA Release
        run:  |
          curl --output sofa.zip -L \
            https://github.com/sofa-framework/sofa/releases/download/v20.12.01/SOFA_v20.12.01_Linux.zip
          unzip sofa.zip -d temp
          mv temp/`ls temp` $SOFA_ROOT

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.0
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ubuntu-ccache-${{ steps.time.outputs.time }}
          restore-keys: |
            ubuntu-ccache-

      - name: Build VTK
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
        run: |
          export CCACHE_BASEDIR=$GITHUB_WORKSPACE
          export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache
          ccache -z
          git clone --depth 1 --branch v9.0.1 https://gitlab.kitware.com/vtk/vtk.git /tmp/vtk
          cd /tmp/vtk
          git submodule update --init
          mkdir build
          cd build
          cmake \
            -GNinja \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=$VTK_ROOT \
            -DVTK_GROUP_ENABLE_Imaging=NO \
            -DVTK_GROUP_ENABLE_MPI=NO \
            -DVTK_GROUP_ENABLE_Qt=NO \
            -DVTK_GROUP_ENABLE_Rendering=NO \
            -DVTK_GROUP_ENABLE_StandAlone=DEFAULT \
            -DVTK_GROUP_ENABLE_Views=NO \
            -DVTK_GROUP_ENABLE_Web=NO \
            -DVTK_RELOCATABLE_INSTALL=ON \
            -DVTK_MODULE_ENABLE_VTK_IOLegacy=YES \
            -DBUILD_SHARED_LIBS=OFF \
            ..
          cmake --build .
          cmake --install .



      - name: Build caribou
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
        run:
          export CCACHE_BASEDIR=$GITHUB_WORKSPACE &&
          export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache &&
          ccache -z &&
          cmake
          -GNinja
          -DCMAKE_C_COMPILER_LAUNCHER=ccache
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCARIBOU_BUILD_TESTS=ON
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=install
          .
          && ninja && ninja install
          && echo ${CCACHE_BASEDIR}
          && ccache -s

      - name: Archive production
        uses: actions/upload-artifact@v2
        with:
          name: caribou-ubuntu-2004
          path: install
  test:
    name: Testing on ubuntu 20.04
    runs-on: ubuntu-20.04
    env:
      SOFA_ROOT: /opt/sofa
      CARIBOU_ROOT: /opt/sofa/plugins/SofaCaribou

    steps:
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install SOFA v20.12.01
        run: |
          curl --output sofa.zip -L \
            https://github.com/sofa-framework/sofa/releases/download/v20.12.01/SOFA_v20.12.01_Linux.zip
          unzip sofa.zip -d temp
          mv temp/`ls temp` $SOFA_ROOT

      - name: Install caribou
        uses: actions/download-artifact@v2
        with:
          name: caribou-ubuntu-2004
          path: /opt/sofa/plugins/SofaCaribou

      - name: Caribou.Geometry.Test
        if: ${{ always() }}
        run:
          chmod +x $CARIBOU_ROOT/bin/Caribou.Geometry.Test &&
          $CARIBOU_ROOT/bin/Caribou.Geometry.Test

